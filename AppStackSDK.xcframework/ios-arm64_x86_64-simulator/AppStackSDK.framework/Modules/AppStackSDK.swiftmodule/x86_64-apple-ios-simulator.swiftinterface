// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name AppStackSDK
import AdServices
@_exported import AppStackSDK
import Foundation
import StoreKit
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os.log
import os
@_hasMissingDesignatedInitializers public class AppStack {
  public static var shared: AppStackSDK.AppStack
  public var logLevel: AppStackSDK.LogLevel
  public func configure()
  public func sendEvent(event: any AppStackSDK.AppStackEventProtocol)
  @objc deinit
}
public struct ConversionValues : Swift.Codable {
  public struct ConversionValue : Swift.Codable {
    public enum CoarseValue : Swift.String, Swift.Codable {
      case high
      case medium
      case low
      public init?(rawValue: Swift.String)
      public typealias RawValue = Swift.String
      public var rawValue: Swift.String {
        get
      }
    }
    public func encode(to encoder: any Swift.Encoder) throws
    public init(from decoder: any Swift.Decoder) throws
  }
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public typealias CoarseConversionValue = AppStackSDK.ConversionValues.ConversionValue.CoarseValue
public enum LogLevel : Swift.Int {
  case off
  case error
  case debug
  case info
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers public class Logger {
  public static func error(_ message: Swift.String)
  public static func debug(_ message: Swift.String)
  public static func info(_ message: Swift.String)
  @objc deinit
}
public enum LogDateFormatter : Swift.String {
  case MM_dd_yyyy_HH_mm_ss_SSS
  case MM_dd_yyyy_HH_mm_ss
  case E_d_MMM_yyyy_HH_mm_ss_Z
  case MMM_d_HH_mm_ss_SSSZ
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public protocol AppStackEventProtocol {
  var key: Swift.String { get }
  var fineValue: Swift.Int { get }
  var coarseValue: AppStackSDK.CoarseConversionValue { get }
  var lockWindow: Swift.Bool { get }
}
extension AppStackSDK.ConversionValues.ConversionValue.CoarseValue : Swift.Equatable {}
extension AppStackSDK.ConversionValues.ConversionValue.CoarseValue : Swift.Hashable {}
extension AppStackSDK.ConversionValues.ConversionValue.CoarseValue : Swift.RawRepresentable {}
extension AppStackSDK.LogLevel : Swift.Equatable {}
extension AppStackSDK.LogLevel : Swift.Hashable {}
extension AppStackSDK.LogLevel : Swift.RawRepresentable {}
extension AppStackSDK.LogDateFormatter : Swift.Equatable {}
extension AppStackSDK.LogDateFormatter : Swift.Hashable {}
extension AppStackSDK.LogDateFormatter : Swift.RawRepresentable {}
